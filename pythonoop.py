"""В этом упражнении необходимо выполнить задание из нескольких шагов для практики использования
регулярных выражений и реализации нескольких полезных функций. Следуйте алгоритму:
1. Получите текст из файла.
Примечание: Можете взять свой текст или воспользоваться готовым из материалов к уроку.
Вспомните операции с чтением файлов и не забудьте сохранить текст в переменную по аналогии с видеоуроками.
2. Разбейте полученные текст на предложения.
Примечание: Напоминаем, что в русском языке предложения заканчиваются на ., ! или ?.
3. Найдите слова, состоящие из 4 букв и более. Выведите на экран 10 самых часто используемых слов.
Пример вывода: [(“привет”, 3), (“люди”, 3), (“город”, 2)].
4. Отберите все ссылки.
Примечание: Для поиска воспользуйтесь методом compile, в который вы вставите свой шаблон для поиска ссылок в тексте.
5. Ссылки на страницы какого домена встречаются чаще всего?
Напоминаем, что доменное имя — часть ссылки до первого
символа «слеш». Например в ссылке вида travel.mail.ru/travel?id=5 доменным именем является travel.mail.ru.
Подсчет частоты сделайте по аналогии с заданием 3, но верните только одну самую частую ссылку.
6. Замените все ссылки на текст «Ссылка отобразится после регистрации»."""

# Импортируем модуль
import re
from collections import Counter

# Открываем на чтение текстовый файл:
with open('lesson_1.txt', 'r') as test:
    result = test.read()

# Разбиваем текст на предложения по разделителю используя метод re:
list1 = re.split(r'\.|\?|\!', result)
print(list1)

# Находим слова состоящие из 4 букв и более:
list2 = re.findall(r'(\b\w{4,}\b)', result)
print(list2)

# Определяем количество повторяющихся слов:
counter = Counter(list2)
print(counter)

# Находим все ссылки:
pattern = re.compile(r'\w+\.\w+\.\w+')
print(pattern.findall(result))

# Меняем все ссылки на предложение:
example = re.compile(r'\w+\.\D+\w+')
list3 = re.sub(example, '«Ссылка отобразится после регистрации»', result)
print(list3)

